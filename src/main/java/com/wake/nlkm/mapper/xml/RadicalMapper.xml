<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wake.nlkm.mapper.RadicalMapper">
  <resultMap id="BaseResultMap" type="com.wake.nlkm.entity.Radical">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="radical" jdbcType="VARCHAR" property="radical" />
    <result column="radical_explain" jdbcType="VARCHAR" property="radicalExplain" />
    <result column="check_state" jdbcType="TINYINT" property="checkState" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, radical, radical_explain, check_state, createtime, updatetime
  </sql>
  <select id="selectCount" resultType="java.lang.Integer">
    select count(*) from radical where `is_delete` = 0
  </select>
  
  <select id="selectByBatch" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from radical
    where `is_delete` = 0
    limit #{offset},#{limit}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from radical
    where id = #{id,jdbcType=INTEGER} and `is_delete` = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from radical
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wake.nlkm.entity.Radical" useGeneratedKeys="true"
          keyColumn="id" keyProperty="id">
    insert into radical ( radical, radical_explain,
      check_state, createtime, updatetime
      )
    values (#{radical,jdbcType=VARCHAR}, #{radicalExplain,jdbcType=VARCHAR},
      #{checkState,jdbcType=TINYINT}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wake.nlkm.entity.Radical" useGeneratedKeys="true"
          keyColumn="id" keyProperty="id">
    insert into radical
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="radical != null">
        radical,
      </if>
      <if test="radicalExplain != null">
        radical_explain,
      </if>
      <if test="checkState != null">
        check_state,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="radical != null">
        #{radical,jdbcType=VARCHAR},
      </if>
      <if test="radicalExplain != null">
        #{radicalExplain,jdbcType=VARCHAR},
      </if>
      <if test="checkState != null">
        #{checkState,jdbcType=TINYINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wake.nlkm.entity.Radical">
    update radical
    <set>
      <if test="radical != null">
        radical = #{radical,jdbcType=VARCHAR},
      </if>
      <if test="radicalExplain != null">
        radical_explain = #{radicalExplain,jdbcType=VARCHAR},
      </if>
      <if test="checkState != null">
        check_state = #{checkState,jdbcType=TINYINT},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wake.nlkm.entity.Radical">
    update radical
    set radical = #{radical,jdbcType=VARCHAR},
      radical_explain = #{radicalExplain,jdbcType=VARCHAR},
      check_state = #{checkState,jdbcType=TINYINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateCheckState" parameterType="java.util.Map">
    update radical
    set
        `check_state` = #{state},
        `updatetime` = #{updatetime}
    where id = #{id}
  </update>

  <update id="updateDelete" parameterType="java.util.Map">
    update radical
    set
        `is_delete` = #{state},
        `updatetime` = #{updatetime}
    where id = #{id}
  </update>

</mapper>